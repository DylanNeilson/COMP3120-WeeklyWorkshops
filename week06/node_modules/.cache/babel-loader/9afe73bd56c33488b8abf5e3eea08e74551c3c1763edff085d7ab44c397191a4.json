{"ast":null,"code":"var _jsxFileName = \"/Users/dylanneilson/Documents/GitHub/COMP3120-Workshops/week03/src/Unit.js\",\n  _s = $RefreshSig$();\n// 2. Add a new Component called Unit to display a unit\n\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Unit = props => {\n  _s();\n  // 3. Add a state variable to your unit to hold the title of the unit (a string). Initialise the state variable with the title passed in to the component (i.e. props.title). \n  const [title, setTitle] = useState(props.title);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"unit\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [props.code, \" \", title]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setTitle(title.toUpperCase()),\n      children: \"Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setTitle(title.toLowerCase()),\n      children: \"Down\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this);\n};\n_s(Unit, \"ceUz0wjPP/oTY3+evv2xH5hljW4=\");\n_c = Unit;\nexport default Unit;\nvar _c;\n$RefreshReg$(_c, \"Unit\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Unit","props","_s","title","setTitle","className","children","code","fileName","_jsxFileName","lineNumber","columnNumber","onClick","toUpperCase","toLowerCase","_c","$RefreshReg$"],"sources":["/Users/dylanneilson/Documents/GitHub/COMP3120-Workshops/week03/src/Unit.js"],"sourcesContent":["// 2. Add a new Component called Unit to display a unit\n\nimport {useState} from 'react'\n\nconst Unit = (props) => {\n\n    // 3. Add a state variable to your unit to hold the title of the unit (a string). Initialise the state variable with the title passed in to the component (i.e. props.title). \n    const [title, setTitle] = useState(props.title)\n\n    return (\n        <div className=\"unit\">\n            <h2>{props.code} {title}</h2>\n            {/* 3. Now add two buttons to the component with actions that use the .toUpperCase() and .toLowerCase()  string methods to change the case of the title (one button labelled Up, one labelled Down).    */}\n            <button onClick={() => setTitle(title.toUpperCase())}>Up</button>\n            <button onClick={() => setTitle(title.toLowerCase())}>Down</button>\n        </div>\n    )\n}\n\nexport default Unit;"],"mappings":";;AAAA;;AAEA,SAAQA,QAAQ,QAAO,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE9B,MAAMC,IAAI,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAEpB;EACA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAACI,KAAK,CAACE,KAAK,CAAC;EAE/C,oBACIJ,OAAA;IAAKM,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACjBP,OAAA;MAAAO,QAAA,GAAKL,KAAK,CAACM,IAAI,EAAC,GAAC,EAACJ,KAAK;IAAA;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAE7BZ,OAAA;MAAQa,OAAO,EAAEA,CAAA,KAAMR,QAAQ,CAACD,KAAK,CAACU,WAAW,CAAC,CAAC,CAAE;MAAAP,QAAA,EAAC;IAAE;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACjEZ,OAAA;MAAQa,OAAO,EAAEA,CAAA,KAAMR,QAAQ,CAACD,KAAK,CAACW,WAAW,CAAC,CAAC,CAAE;MAAAR,QAAA,EAAC;IAAI;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClE,CAAC;AAEd,CAAC;AAAAT,EAAA,CAbKF,IAAI;AAAAe,EAAA,GAAJf,IAAI;AAeV,eAAeA,IAAI;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}